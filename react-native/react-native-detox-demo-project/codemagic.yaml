workflows:
    ios-workflow:
        name: iOS Workflow
        instance_type: mac_mini
        environment:
            groups:
            # Add the group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
                - app_store_credentials # <-- (APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY)
                  # APP_STORE_CONNECT_ISSUER_ID <-- Put your App Store Connect Issuer Id here 
                  # APP_STORE_CONNECT_KEY_IDENTIFIER <-- Put your App Store Connect Key Identifier here 
                  # APP_STORE_CONNECT_PRIVATE_KEY <-- Put your App Store Connect Private Key here
                  # See the following link for more details - https://docs.codemagic.io/code-signing-yaml/signing-ios/
                  # https://appstoreconnect.apple.com/access/api
                - certificate_credentials # <-- (CERTIFICATE_PRIVATE_KEY - Put your Certificate Private Key here)
                - other
            vars:
                XCODE_WORKSPACE: "detoxer.xcworkspace" # <-- Put the name of your Xcode workspace here
                XCODE_SCHEME: "detoxer" # <-- Put the name of your Xcode scheme here
            node: v16.11.1
            xcode: latest
            cocoapods: default
        triggering:
            events:
                - push
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true        
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Install detox dependencies
              script: |
                brew tap wix/brew
                brew install applesimutils
            - name: Install detox-cli
              script: |
                npm install -g detox-cli
            - name: Install CocoaPods dependencies
              script: |
                cd ios && pod install
            - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
              script: |
                keychain initialize
            - name: Fetch signing files
              script: |
                # update your bundle id below!
                app-store-connect fetch-signing-files "io.codemagic.detoxer" --type IOS_APP_STORE --create 
            - name: Use system default keychain
              script: |
                keychain add-certificates
            - name: Increment build number
              script: |
                #!/bin/sh
                set -e
                set -x
                cd $CM_BUILD_DIR/ios
                agvtool new-version -all $(($BUILD_NUMBER + 1))
            - name: Set up code signing settings on Xcode project
              script: |
                xcode-project use-profiles
            - name: Build with Detox
              script: |
                #!/bin/sh
                set -e
                set -x
                detox build -c ios.sim.release -l verbose
            - name: Test with Detox
              script: |
                #!/bin/sh
                set -e
                set -x
                detox test -c ios.sim.release -l verbose
            - name: Build ipa for distribution
              script: |
                xcode-project build-ipa --workspace "$CM_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
        artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM 
        publishing:
            email:
                recipients:
                    - user1@example.com
                    - user2@example.com
                notify:
                  success: true
                  failure: false  
            app_store_connect:                 
                api_key: $APP_STORE_CONNECT_PRIVATE_KEY         # Contents of the API key, can also reference environment variable such as $APP_STORE_CONNECT_PRIVATE_KEY
                key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER       # Alphanumeric value that identifies the API key, can also reference environment variable such as $APP_STORE_CONNECT_KEY_IDENTIFIER
                issuer_id: $APP_STORE_CONNECT_ISSUER_ID         # Alphanumeric value that identifies who created the API key, can also reference environment variable such as $APP_STORE_CONNECT_ISSUER_ID
                submit_to_testflight: false                     # Optional boolean, defaults to false. Whether or not to submit the uploaded build to TestFlight beta review. Required for distributing to beta groups. Note: This action is performed during post-processing.
                # beta_groups:                                  # Specify the names of beta tester groups that will get access to the build once it has passed beta review. 
                #      - group name 1
                #      - group name 2  
    android-workflow:
        name: Android Workflow
        instance_type: linux
        environment:
            groups:
            # Add the group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
                - keystore_credentials # <-- (Includes CM_KEYSTORE, CM_KEYSTORE_PASSWORD, CM_KEY_ALIAS_PASSWORD, CM_KEY_ALIAS_USERNAME)
                  # CM_KEYSTORE <-- Put your keystore file here
                  # CM_KEYSTORE_PASSWORD <-- Put your keystore password here
                  # CM_KEY_ALIAS_PASSWORD <-- Put your keystore alias password here
                  # CM_KEY_ALIAS_USERNAME <-- Put your keystore alias username here
                - google_play # <-- (Includes GCLOUD_SERVICE_ACCOUNT_CREDENTIALS <-- Put your google-services.json)
                - other
            node: latest
        triggering:
            events:
                - push
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Install detox dependencies
              script: |
                brew tap wix/brew
            - name: Install detox-cli
              script: |
                npm install -g detox-cli
            - name: Set Android SDK location
              script: |
                echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/android/local.properties"
            - name: Set up keystore
              script: |
                    echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
                    # cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
                    # storePassword=$CM_KEYSTORE_PASSWORD
                    # keyPassword=$CM_KEY_ALIAS_PASSWORD
                    # keyAlias=$CM_KEY_ALIAS_USERNAME
                    # storeFile=/tmp/keystore.keystore
                    # EOF
            - name: Build with Detox
              script: |
                #!/bin/sh
                set -e
                set -x
                detox build -c android.emu.release -l verbose
            - name: Test with Detox
              script: |
                #!/bin/sh
                set -e
                set -x
                detox test -c android.emu.release -l verbose
            - name: Build Android release
              script: |
                cd android
                ./gradlew assembleRelease
        artifacts:
            - android/app/build/outputs/**/*.apk
        publishing:
            email:
                recipients:
                    - user1@example.com
                    - user2@example.com
            google_play:                          # For publishing your Android app to Google Play
                credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
                track: alpha                      # Name of the track: internal, alpha, beta, production
