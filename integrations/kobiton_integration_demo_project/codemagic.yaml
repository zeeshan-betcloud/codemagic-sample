workflows:
  react-native-ios:
    name: Integrations Kobiton React Native iOS
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: io.codemagic.expoapp
      groups:
        - kobiton_credentials
      vars:
        XCODE_WORKSPACE: "YOUR_WORKSPACE_NAME.xcworkspace" # <-- Put the name of your Xcode workspace here
        XCODE_SCHEME: "YOUR_SCHEME_NAME" # <-- Put the name of your Xcode scheme here
        BUNDLE_ID: "YOUR_BUNDLE_ID_HERE" # <-- Put your Bundle Id here e.g com.domain.myapp
        APP_STORE_APP_ID: 1555555551 # <-- Put the app id number here. This is found in App Store Connect > App > General > App Information
      node: v16.11.1
      cocoapods: default
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: develop
          include: true
          source: true
    scripts:
      - name: Install npm dependencies
        script: |
          npm install
      - name: Install CocoaPods dependencies
        script: |
          cd ios && pod install
      - name: Increment build number
        script: |
          cd $CM_BUILD_DIR/ios
          agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles --warn-only
      - name: Build ipa for distribution
        script: |
          xcode-project build-ipa \
            --workspace "$CM_BUILD_DIR/ios/$XCODE_WORKSPACE" \
            --scheme "$XCODE_SCHEME" 
      - name: Uploading to Kobiton
        script: |
          CURL_RESULT=$(curl -X POST https://api.kobiton.com/v1/apps/uploadUrl \
            -H 'Authorization: Basic $KOBITON_CREDENTIALS) \
            -H 'Content-Type: application/json' \
            -d '{"filename": "your_desired_binary_name.ipa"}' | jq -r)

          APP_URL=$(jq -r '.url' <<<"$CURL_RESULT")
          APP_PATH=$(jq -r '.appPath' <<<"$CURL_RESULT") 

          curl -X PUT “$APP_URL” \
            -H 'content-type: application/octet-stream' \
            -H 'x-amz-tagging: unsaved=true' \
            -T "build/ios/ipa/kobition_integration.ipa"

          curl -X POST https://api.kobiton.com/v1/apps \
            -H 'Authorization:  Basic $KOBITON_CREDENTIALS' \
            -H 'Content-Type: application/json' \
            -H 'Accept: application/json' \
            -d '{"appPath": “’”$APP_PATH”’”}’           
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
      email:
        recipients:
          - user_1@example.com
          - user_2@example.com
        notify:
          success: true     # To not receive a notification when a build succeeds
          failure: false    # To not receive a notification when a build fails
      slack: 
        # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
        channel: '#channel-name'
        notify_on_build_start: true   # To receive a notification when a build starts
        notify:
          success: true               # To not receive a notification when a build succeeds
          failure: false              # To not receive a notification when a build fails
      app_store_connect:                 
        auth: integration
        submit_to_testflight: false                     # Optional boolean, defaults to false. Whether or not to submit the uploaded build to TestFlight beta review. Required for distributing to beta groups. Note: This action is performed during post-processing.

  
