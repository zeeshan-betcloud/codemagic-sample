workflows:
  ios-workflow:
    name: iOS workflow
    integrations:
      app_store_connect: codemagic
    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: io.codemagic.ionicsample
      xcode: latest
      node: v16.11.1
      npm: 6
    cache:
      cache_paths:
        - $CM_BUILD_DIR/node_modules
    scripts:
      - name: Install dependencies
        script: |
          npm install
          npm ci # equivalent of npm install for CI systems.
            # Requires package-lock.json or npm-shrinkwrap.json to be present
          cvm install 9.0.0
          cvm use 9.0.0
          npm install -g ionic
          ionic info   
      - name: Setup iOS
        script: |
          ionic cordova platform remove ios --nosave
          ionic cordova platform add ios \
            --confirm \
            --no-interactive \
            --noresources \
            --save        
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Build iOS
        script: |
          package_type=$(defaults read ~/export_options.plist method)
          identity=$(defaults read ~/export_options.plist signingCertificate)
          team=$(defaults read ~/export_options.plist teamID)
          profile=$(find '/Users/builder/Library/MobileDevice/Provisioning Profiles' -name "*.mobileprovision")
          profile_uuid=$(grep UUID -A1 -a "$profile" | grep -io "[-A-F0-9]\{36\}")
        
          cat <<EOF > build.json
              {
                "ios": {
                  "release": {
                    "codeSignIdentity": "$identity",
                    "developmentTeam": "$team",
                    "packageType": "$package_type",
                    "provisioningProfile": "$profile_uuid"
                  }
                }
              }
          EOF
          ionic cordova build ios --release --device --buildConfig='build.json' 
    artifacts:
      - /Users/builder/clone/platforms/ios/build/device/*.ipa
      - /tmp/xcodebuild_logs/*.log           
    publishing:
      # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
      email:
        recipients:
          - user_1@example.com
          - user_2@example.com
        notify:
          success: true     # To not receive a notification when a build succeeds
          failure: false    # To not receive a notification when a build fails
      slack: 
        # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
        channel: '#channel-name'
        notify_on_build_start: true   # To receive a notification when a build starts
        notify:
          success: true               # To not receive a notification when a build succeeds
          failure: false              # To not receive a notification when a build fails
      app_store_connect:
        auth: integration

        # Configuration related to TestFlight (optional)
        # Note: This action is performed during post-processing.
        submit_to_testflight: true
        beta_groups: # Specify the names of beta tester groups that will get access to the build once it has passed beta review.
          - group name 1
          - group name 2

        # Configuration related to App Store (optional)
        # Note: This action is performed during post-processing.
        submit_to_app_store: false


  android-workflow:
    name: Android workflow
    environment:
      android_signing:
        - keystore_reference
      groups:
        - google_play # <-- (Includes GCLOUD_SERVICE_ACCOUNT_CREDENTIALS - Put your google-services.json here)
      xcode: 12.4
      node: 12
      npm: 6        
    cache:
      cache_paths:
        - $CM_BUILD_DIR/node_modules
    scripts:
      - name: Install dependencies
        script: |
          npm install
          npm ci ci # equivalent of npm install for CI systems.
            # Requires package-lock.json or npm-shrinkwrap.json to be present
          cvm install 9.0.0
          cvm use 9.0.0
          npm install -g ionic
          ionic info        
      - name: Add Android platform
        script: |
          set -x
          ionic cordova platform remove android --nosave
          ionic cordova platform add android \
            --confirm \
            --no-interactive \
            --noresources 
      - name: Build Android
        script: |    
          set -x
          set -e
          APK_PATH=$(find platforms/android/app/build/outputs/apk/release -name "*.apk" | head -1)
          jarsigner \
            -sigalg SHA1withRSA \
            -digestalg SHA1 \
            -keystore $CM_KEYSTORE_PATH \
            -storepass $CM_KEYSTORE_PASSWORD \
            -keypass $CM_KEY_PASSWORD \
            $APK_PATH $CM_KEY_ALIAS 
    artifacts:
      - platforms/android/app/build/outputs/**/*.apk
      - platforms/android/app/build/outputs/**/mapping.txt
    publishing:
        # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
        email:
            recipients:
                - user_1@example.com
                - user_2@example.com
            notify:
              success: true     # To not receive a notification when a build succeeds
              failure: false    # To not receive a notification when a build fails
        slack: 
          # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
          channel: '#channel-name'
          notify_on_build_start: true   # To receive a notification when a build starts
          notify:
            success: true               # To not receive a notification when a build succeeds
            failure: false              # To not receive a notification when a build fails
        google_play:
          # See the following link for information regarding publishing to Google Play - https://docs.codemagic.io/publishing-yaml/distribution/#google-play
          credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
          track: alpha      
