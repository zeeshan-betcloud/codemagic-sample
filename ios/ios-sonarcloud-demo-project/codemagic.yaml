workflows:
    ios-sonarcloud:
      name: iOS SonarCloud
      instance_type: mac_pro
      environment:
        groups:
        # Add the group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
          - app_store_credentials # <-- (Includes APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY)
            # APP_STORE_CONNECT_ISSUER_ID <-- Put your App Store Connect Issuer Id here 
            # APP_STORE_CONNECT_KEY_IDENTIFIER <-- Put your App Store Connect Key Identifier here 
            # APP_STORE_CONNECT_PRIVATE_KEY <-- Put your App Store Connect Private Key here
            # See the following link for more details - https://docs.codemagic.io/code-signing-yaml/signing-ios/
            # https://appstoreconnect.apple.com/access/api
          - certificate_credentials # <-- (CERTIFICATE_PRIVATE_KEY - Put your Certificate Private Key here)
          - sonar_credentials # <-- (Includes SONAR_TOKEN, SONAR_PROJECT_KEY, SONAR_ORG_KEY)
            # SONAR_TOKEN <-- Put your Sonar Cloud token here
            # SONAR_PROJECT_KEY <-- Put your Sonar Cloud project key here
            # SONAR_ORG_KEY <-- Put your Sonar Cloud organisation key here
          - other # <-- (Includes APPLE_ID_EMAIL, APP_SPECIFIC_PASSWORD, APP_STORE_APP_ID)
            # APPLE_ID_EMAIL <-- Put your Apple Id email address here
            # APP_SPECIFIC_PASSWORD <-- Put your App Specific password address here
            # APP_STORE_APP_ID <-- Put your App Id here      
        vars:
          XCODE_PROJECT: "swiftqube.xcodeproj"
          XCODE_SCHEME: "swiftqube"
          BUNDLE_ID: "io.codemagic.swiftqube"
        xcode: 12.5
        cocoapods: default
      triggering:
        events:
          - push
          - pull_request
        branch_patterns:
          - pattern: branch-develop
            include: true
            source: true
          - pattern: main
            include: true
      scripts:
        - name: Install Sonar Scanner
          script: | 
            brew install sonar-scanner
        - |
          # Generate debug build
          xcodebuild \
          -project "$XCODE_PROJECT" \
          -scheme "$XCODE_SCHEME" \
          -sdk iphonesimulator \
          -destination 'platform=iOS Simulator,name=iPhone 12 Pro,OS=14.5' \
          -derivedDataPath Build/ \
          -enableCodeCoverage YES \
          clean build test CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO
        - |
          # convert coverage report to sonarqube format
          bash xccov-to-sonarqube-generic.sh Build/Logs/Test/*.xcresult/ > sonarqube-generic-coverage.xml
        - |
          # Generate and upload code analysis report
          if [[ $FCI_PULL_REQUEST == true ]]
          then
            echo "Is a pull request"
            TARGET=$FCI_PULL_REQUEST_DEST
          else 
            echo "NOT a pull request"
            TARGET=$FCI_BRANCH
          fi
          echo "TARGET is set to ${TARGET}"
          export PATH=$PATH:$FCI_BUILD_DIR/sonar-scanner/bin
          sonar-scanner \
          -Dsonar.projectKey=$SONAR_PROJECT_KEY \
          -Dsonar.organization=$SONAR_ORG_KEY \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=$SONAR_TOKEN \
          -Dsonar.projectVersion=1.0.0-cm \
          -Dsonar.sources=. \
          -Dsonar.cfamily.build-wrapper-output.bypass=true \
          -Dsonar.coverageReportPaths=sonarqube-generic-coverage.xml \
          -Dsonar.c.file.suffixes=- \
          -Dsonar.cpp.file.suffixes=- \
          -Dsonar.objc.file.suffixes=- \
          -Dsonar.branch.name=$FCI_BRANCH \
          -Dsonar.branch.target=$TARGET
      artifacts:
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      publishing:               
        email:
            recipients:
              - user1@example.com
            notify:
              success: true
              failure: true
