workflows:
  react-native-ios:
    name: React Native iOS
    max_build_duration: 120
    instance_type: mac_mini_m1
    integrations:
      app_store_connect: codemagic
    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: io.codemagic.sample.reactnative
      groups:
        - sentry_credentials #  <-- (Includes Sentry access token, Organization and Project names)
      vars:
        XCODE_PROJECT: "ios/codemagic_react_native.xcodeproj"
        XCODE_WORKSPACE: "CodemagicSample.xcworkspace" # <-- Put the name of your Xcode workspace here
        XCODE_SCHEME: "CodemagicSample" # <-- Put the name of your Xcode scheme here
        APP_ID: 1555555551 # <-- Put the app id number here. This is found in App Store Connect > App > General > App Information
      node: 14.16.1
      xcode: latest
      cocoapods: default
    scripts:
      - name: Install npm dependencies
        script: |
          npm install
          npm install --save @sentry/react-native
      - name: Install CocoaPods dependencies
        script: |      
          cd ios 
          pod install
      - name: Increment build number
        script: |
          cd $CM_BUILD_DIR/ios
          LATEST_BUILD_NUMBER=$(app-store-connect get-latest-app-store-build-number "$APP_ID")
          agvtool new-version -all $(($LATEST_BUILD_NUMBER + 1))
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles  --project=$XCODE_PROJECT
      - name: Build ipa for distribution
        script: |
          xcode-project build-ipa \
            --workspace "$CM_BUILD_DIR/ios/$XCODE_WORKSPACE" \
            --scheme "$XCODE_SCHEME" 
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      scripts:
        - name: Sntry Upload
          script: | 
            echo "Find build artifacts"
            dsymPath=$(find $CM_BUILD_DIR/build/ios/xcarchive/*.xcarchive -name "*.dSYM" | head -1)
            if [[ -z ${dsymPath} ]]
            then
              echo "No debug symbols were found, skip publishing to Sentry"
            else
              echo "Publishing debug symbols from $dsymPath to Sentry"
              sentry-cli --auth-token $SENTRY_ACCESS_TOKEN upload-dif --org $SENTRY_ORGANIZATION_NAME --project $SENTRY_PROJECT_NAME $dsymPath
            fi
